package org.rampart.lang.java.parser;

import org.rampart.lang.java.InvalidRampartAppException;

import java.util.LinkedHashMap;

/**
 * A class to act as a symbol table for the visitation of the AST generated by ANTLR.
 * It functions identically to a LinkedHashMap, except attempts to put entries into
 * the map with keys already in the keyset throw an exception.
 */
class RampartSymbolTable<K, V> extends LinkedHashMap<K, V> {

    /**
     * Insert new Key:Value pair into the symbol table
     * @throws InvalidRampartAppException when the key is already contained in the keyset
     * @see java.util.Map#put(Object, Object)
     */
    @Override
    public V put(K key, V value) {
        if (this.keySet().contains(key)) {
            V firstValue = this.get(this.keySet().iterator().next());
            throw new InvalidRampartAppException("duplicate RAMPART object \"" + key + "\" specified in rule: " + firstValue);
        }
        return super.put(key, value);
    }


}
